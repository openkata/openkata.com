{"version":3,"sources":["webpack:///./src/components/UI/TitleSection/styles.ts","webpack:///./src/components/UI/TitleSection/index.tsx","webpack:///./src/utils/FormatHtml/index.tsx","webpack:///./src/templates/BlogPost/styles.ts","webpack:///./src/templates/BlogPost/index.tsx"],"names":["TitleSection","styled","div","Title","h2","center","title","FormatHtml","content","className","dangerouslySetInnerHTML","__html","Links","h3","figure","query","BlogPost","data","pageContext","post","markdownRemark","previous","next","Layout","SEO","frontmatter","Container","section","date","html","to","fields","slug","rel"],"mappings":"mIAOaA,EAAeC,IAAOC,IAAV,0EAAGD,CAAH,SACnB,sDAGOE,EAAQF,IAAOG,GAAV,mEAAGH,CAAH,aACZ,oHACF,qBAAGI,QAAyB,wBCCjBL,IANuB,SAAC,GAAD,IAAGK,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OACpC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcD,OAAQA,GAASC,M,6KCKpBC,EATqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClC,0BACEC,UAAU,cACVC,wBAAyB,CACvBC,OAAQH,M,YCCDI,GARQX,IAAOY,GAAV,oEAAGZ,CAAH,SACZ,wCAGeA,IAAOa,OAAV,oEAAGb,CAAH,SACZ,+FAGeA,IAAOC,IAAV,oEAAGD,CAAH,SACZ,kFCsDOc,GAFEC,UA/BmB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnCC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKlB,MAAOa,EAAKM,YAAYnB,QAC7B,kBAACoB,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAAC3B,EAAA,EAAD,CAAcM,MAAOa,EAAKM,YAAYG,OACtC,kBAAC,EAAD,CAAYpB,QAASW,EAAKU,OAC1B,kBAAC,EAAD,KACE,8BACGR,GACC,kBAAC,IAAD,CAAMS,GAAIT,EAASU,OAAOC,KAAMC,IAAI,YAApC,KACKZ,EAASI,YAAYnB,QAI9B,8BACGgB,GACC,kBAAC,IAAD,CAAMQ,GAAIR,EAAKS,OAAOC,KAAMC,IAAI,QAC7BX,EAAKG,YAAYnB,MADpB,WAaO","file":"component---src-templates-blog-post-index-tsx-e7f0835a77143793f433.js","sourcesContent":["import styled from 'styled-components'\nimport tw from 'tailwind.macro'\n\nexport interface StyledProps {\n  center?: boolean\n}\n\nexport const TitleSection = styled.div`\n  ${tw`flex flex-col w-full`};\n`\n\nexport const Title = styled.h2<StyledProps>`\n  ${tw`uppercase mb-4 text-lg font-bold w-full text-left`};\n  ${({ center }) => center && tw`text-center`};\n`\n","import React from 'react'\n\nimport * as Styled from './styles'\n\ninterface Props extends Styled.StyledProps {\n  title: string\n}\n\nconst TitleSection: React.FC<Props> = ({ center, title }) => (\n  <Styled.TitleSection>\n    <Styled.Title center={center}>{title}</Styled.Title>\n  </Styled.TitleSection>\n)\n\nexport default TitleSection\n","import React from 'react'\n\ninterface Props {\n  content: any\n}\n\nconst FormatHtml: React.FC<Props> = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content,\n    }}\n  />\n)\n\nexport default FormatHtml\n","import styled from 'styled-components'\nimport tw from 'tailwind.macro'\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`\n\nexport const Image = styled.figure`\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\n`\n\nexport const Links = styled.div`\n  ${tw`w-full flex justify-between mt-10`};\n`\n","import Layout from 'components/Layout'\nimport SEO from 'components/SEO'\nimport Container from 'components/UI/Container'\nimport TitleSection from 'components/UI/TitleSection'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport FormatHtml from 'utils/FormatHtml'\n\nimport * as Styled from './styles'\n\ninterface Post {\n  html: React.ReactNode\n  fields: {\n    slug: string\n  }\n  frontmatter: {\n    title: string\n    date: string\n  }\n}\n\ninterface Props {\n  data: {\n    markdownRemark: Post\n  }\n  pageContext: {\n    slug: string\n    next: Post\n    previous: Post\n  }\n}\n\nconst BlogPost: React.FC<Props> = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <Container section>\n        <TitleSection title={post.frontmatter.date} />\n        <FormatHtml content={post.html} />\n        <Styled.Links>\n          <span>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"previous\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </span>\n          <span>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </span>\n        </Styled.Links>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default BlogPost\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}